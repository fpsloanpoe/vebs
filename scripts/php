#!/usr/bin/env bash


# @param: version of php to install (e.g. 5.6)
args_php_version=${1}

# @param: (optional) list of php extensions to install
args_php_extensions=${2}

# @param: (optional) user to run php-fpm as, note: if left blank, user will be left as default
args_php_user=${3}

# @param: (optional) group to run php-fpm as, note: if left blank, group will be left as default
args_php_group=${4}

# @param: (optional) owner to run php-fpm as, note: if left blank, owner will be left as default
args_php_owner=${5}


# suppress prompts
export DEBIAN_FRONTEND=noninteractive

# install necessary locale

# set locale
export LC_ALL=en_US.UTF-8

# determine the best installation method based on the desired version of php
        # add ppa for 5.6 since it will be a lot faster than using phpbrew
        sudo -E yum install -y https://mirror.webtatic.com/yum/el6/latest.rpm

				sudo -E yum install -y httpd24
        # install specified version of php
        sudo -E yum install -y "php56" 


        # if a string list of packages is passed in, install those packages
        if [ ! -z "${args_php_extensions}" ]; then
            sudo -E yum install -y  ${args_php_extensions} > /dev/null
        fi

        # check for php-fpm
        if [[ ${args_php_extensions} == *"php${args_php_version}-fpm"* ]]; then
            # if a user is specified, overwrite the default user
            if [ ! -z "${args_php_user}" ]; then
                sudo sed -i "s/user = www-data/user = ${args_php_user}/g" /etc/php/${args_php_version}/fpm/pool.d/www.conf > /dev/null
            fi

            # if a group is specified, overwrite the default group
            if [ ! -z "${args_php_group}" ]; then
                sudo sed -i "s/group = www-data/group = ${args_php_group}/g" /etc/php/${args_php_version}/fpm/pool.d/www.conf > /dev/null
            fi

            # if an owner is specified, overwrite the default owner
            if [ ! -z "${args_php_owner}" ]; then
                sudo sed -i "s/owner = www-data/owner = ${args_php_owner}/g" /etc/php/${args_php_version}/fpm/pool.d/www.conf > /dev/null
            fi

            # command to symlink php-fpm.sock file (helps with nginx setup)
            cron_command="sudo ln -s /run/php/php${args_php_version}-fpm.sock /run/php/php-fpm.sock"

            # set up cron to automatically run the symlink command on startup
            (crontab -l 2>/dev/null; echo "@reboot \`${cron_command}\`") | crontab -

            # run script for this session
            `${cron_command}`

            # service needs to be restarted after changing configuration
            sudo service httpd restart
        fi
